---
title: "Oral Health Literacy Part 2"
author: "Alex Cermak"
date: "2023-04-10"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(kableExtra)
library(scales)
library(nnet)
library(car)
library(lmtest)
library(ggplot2)
library(purrr)
library(tidyr)
library(lme4)
library(RColorBrewer)
```

## Data Cleaning: Pretest

```{r, message = FALSE, warning = FALSE}
## NOTE: Data cleaning was performed in Python and new xlsx file was created for use here ##

# create function to read in all excel sheets of pretest data
read_excel_allsheets <- function(datafile, tibble = FALSE) {
    sheets <- excel_sheets(datafile)
    x <- lapply(sheets, function(X) read_excel(datafile, sheet = X, n_max = 20))
    if(!tibble) x <- lapply(x, as.data.frame)
    names(x) <- sheets
    x
}
# read in pretest data
data <- read_excel_allsheets("output.xlsx")

# remove first column in list
data <- lapply(data, function(X) X[!names(X) %in% c("...1")])

# convert list to data frame
data2 <- as.data.frame(do.call(cbind, data))

# convert all variables to character
data2 <- data2 %>%
  mutate(across(everything(), as.factor))

names(data2) <- make.names(names(data2), unique = TRUE)

data2 <- data2 %>%
  subset(select = -c(Chapter.1.Question, Chapter.2.Question, Chapter.3.Question,
                  Chapter.4.Question, Chapter.5.Question, Chapter.6.Question,
                  Chapter.7.Question, Chapter.14.Question, Chapter.15.Question))
# pivot longer
data3 <- data2 %>%
  pivot_longer(everything()) %>%
  separate(name, c("drop","Chapter","StNum"), sep = ".", extra = "merge")
data3 <- data3%>%
  separate(StNum, c("drop2", "ChapterNum", "StudentNum", sep = ".", extra = "merge")) %>%
  subset(select = c(drop2, ChapterNum, StudentNum, value))
data3b <- data3 %>%
  select(drop2,ChapterNum, value)

# move participant information to new data frame
data3b <- data3b[data3b$drop2 == "rticipants",]

# select values for each demographic
StudentNum <- data3b[2:247,2]
StudentGender <- data3b[2:247,3]
StudentGrade <- data3b[249:494,3]
StudentAge <- data3b[496:741,3]
data3c <- cbind(StudentNum, StudentGender, StudentGrade, StudentAge)
colnames(data3c) <- c("StudentNum", "StudentGender", "StudentGrade", "StudentAge")

data4 <- data3 %>%
  group_by(ChapterNum, StudentNum)%>%
  mutate(QuestionNum = row_number())
data4 <- data4 %>%
  mutate(Question = ifelse(QuestionNum == 1, "Q1",
                        ifelse(QuestionNum == 2, "Q2",
                             ifelse(QuestionNum == 3, "Q3",
                                  ifelse(QuestionNum == 4, "Q4",
                                      ifelse(QuestionNum == 5, "Q5",
                                          ifelse(QuestionNum == 6, "Q6",
                                              ifelse(QuestionNum == 7, "Q7",
                                                  ifelse(QuestionNum == 8, "Q8",
                                                      ifelse(QuestionNum ==9, "Q9",
                                                          ifelse(QuestionNum == 10, "Q10",
                                                              ifelse(QuestionNum == 11, "Q11",
                                                                  ifelse(QuestionNum == 12, "Q12", "b")))))))))))))

# delete participant info from other data
data4b <- subset(data4, data4$StudentNum !="rticipants")

# merge scores and participant data togehter
data5 <- merge(data4b, data3c, by = "StudentNum")
data5 <- data5 %>%
  mutate(value = factor(value, levels = c(0,1)),
         ChapterNum = as.numeric(ChapterNum))%>%
  group_by(StudentNum, ChapterNum, Question)

# keep relevant variables
lvl <- c(1,2,3,4,5,6,7,14,15)
data5 <- data5 %>%
  mutate(StudentNum = as.numeric(StudentNum),
         ChapterNum = factor(ChapterNum, levels = lvl))%>%
  subset(select = c(StudentNum, StudentGender, StudentGrade, 
                    StudentAge, ChapterNum, Question, value))

# reverse code Q8 and Q9
data5b <- data5%>%
  pivot_wider(names_from = Question,
              values_from = value)%>%
  mutate(Q8 = factor(ifelse(Q8==1, 0, 1)),
         Q9 = factor(ifelse(Q9==1, 0, 1)))%>%
  pivot_longer(cols = c(Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12),
               names_to = "Question",
               values_to = "Response")

# add KAB indicators
data5b <- data5b %>%
  mutate(KAB = ifelse(Question=="Q2" |
                              Question=="Q3"|
                              Question=="Q5"|
                              Question=="Q7"|
                              Question=="Q8", "Knowledge", 
                        ifelse(Question=="Q1"|
                             Question=="Q4"|
                             Question=="Q10"|
                             Question=="Q11", "Behavior", 
                             ifelse(Question == "Q6" | 
                                    Question == "Q9" | 
                                    Question == "Q12", "Attitude", NA))))
# write final variable name
pretest <- data5b%>%
  mutate(StudentAge = as.numeric(StudentAge),
         KAB = as.factor(KAB))
```


## Data Cleaning: Posttest

```{r, message = FALSE, warning = FALSE}
# read in data and change column names
data <- read_xlsx("posttest.xlsx", skip = 1)
colnames(data) <- c("Student_Num","C1_Q1", "C1_Q2", "C1_Q3", "C1_Q4", "C1_Q5A", "C1_Q5B",
                    "C2_Q1", "C2_Q2", "C2_Q3", "C2_Q4", "C2_Q5", "C2_Q6",
                    "C3_Q1", "C3_Q2","C3_Q3","C3_Q4","C3_Q5",
                    "C4_Q1", "C4_Q2", "C4_Q3", "C4_Q4",
                    "C5_Q1", "C5_Q2", "C5_Q3", "C5_Q4", "C5_Q5", "C5_Q6",
                    "C6_Q1", "C6_Q2", "C6_Q3", "C6_Q4", "C6_Q5", "C6_Q6",
                    "C7_Q1", "C7_Q2", "C7_Q3", "C7_Q4", "C7_Q5", "C7_Q6",
                    "C14C15_Q1", "C14C15_Q2", "C14C15_Q3", "C14C15_Q4",
                    "C14C15_Q5", "C14C15_Q6")

# remove NA columns
data <- data[,-c(47:49)]

# rotate the data longer
data_longer <- pivot_longer(data, cols = -c("Student_Num"),
                            names_to = "Chapter_Question",
                            values_to = "Score")

# create variable for health literacy
data_longer <- data_longer %>%
  mutate(Health_Lit = ifelse(Chapter_Question == "C1_Q1" | Chapter_Question =="C1_Q3" |
                               Chapter_Question =="C2_Q1" | Chapter_Question =="C2_Q4" |
                               Chapter_Question =="C2_Q5" | Chapter_Question =="C2_Q6" | 
                               Chapter_Question =="C3_Q1" | Chapter_Question =="C3_Q4" | 
                               Chapter_Question =="C3_Q5" | Chapter_Question =="C4_Q2" |
                               Chapter_Question =="C4_Q3" | Chapter_Question =="C5_Q6" |
                               Chapter_Question =="C6_Q3" | Chapter_Question =="C6_Q6" | 
                               Chapter_Question =="C7_Q6" |  Chapter_Question =="C14C15_Q2" |
                               Chapter_Question =="C14C15_Q4", "Behavior",
                             ifelse(Chapter_Question == "C1_Q2" | Chapter_Question =="C2_Q3" | 
                                      Chapter_Question =="C3_Q3" | Chapter_Question =="C5_Q3" |
                                      Chapter_Question =="C6_Q1" | Chapter_Question =="C6_Q2" | 
                                      Chapter_Question =="C6_Q4" | Chapter_Question =="C6_Q5", 
                                    "Product",
                                    ifelse(Chapter_Question == "C1_Q5A" | Chapter_Question =="C1_Q5B" | 
                                             Chapter_Question =="C5_Q1" | Chapter_Question =="C5_Q5" | 
                                             Chapter_Question =="C14C15_Q1" | Chapter_Question =="C14C15_Q6",
                                           "Services",
                                           ifelse(Chapter_Question == "C1_Q4" | Chapter_Question =="C2_Q2" |
                                             Chapter_Question =="C3_Q2" | Chapter_Question =="C4_Q1" |
                                               Chapter_Question =="C4_Q4" | Chapter_Question =="C5_Q2" | 
                                               Chapter_Question =="C5_Q4" | Chapter_Question =="C7_Q1" | 
                                               Chapter_Question =="C7_Q2" | Chapter_Question =="C7_Q3" | 
                                               Chapter_Question =="C7_Q4" | Chapter_Question =="C7_Q5" |
                                               Chapter_Question =="C14C15_Q3" | Chapter_Question =="C14C15_Q5",
                                             "Information", NA)))))

data_longer2 <- data_longer %>%
  separate(Chapter_Question, c("Chapter","Question"))

data_longer2$Score <- as.factor(data_longer2$Score)

# rearrange chapter order
lvl2 <- c("C1", "C2", "C3", "C4", "C5", "C6", "C7", "C14C15")
posttest <- data_longer2 %>%
  mutate(Chapter = factor(Chapter, levels = lvl2)) %>%
  arrange(Chapter)
```


## Revisit Pre-test Analysis

```{r}
# separate data by KAB Question Type
pretest_K <- pretest[pretest$KAB == "Knowledge",]
pretest_A <- pretest[pretest$KAB == "Attitude",]
pretest_B <- pretest[pretest$KAB == "Behavior",]

mK <- glmer(Response ~ ChapterNum + (1|StudentNum), data = pretest_K, family = binomial)
mA <- glmer(Response ~ ChapterNum + (1|StudentNum), data = pretest_A, family = binomial)
mB <- glmer(Response ~ ChapterNum + (1|StudentNum), data = pretest_B, family = binomial)

summary(mK)
summary(mA)
summary(mB)

pvalsK <- coef(summary(mK))[,4]
pvalsA <- coef(summary(mA))[,4]
pvalsB <- coef(summary(mB))[,4]


pvalsKAB <- data.frame(pvalsK, pvalsA, pvalsB)
colnames(pvalsKAB) <- c("Knowledge", "Attitude", "Behavior")
kable(pvalsKAB, caption = "KAB Pretest P-Values", digits = 4, align = NULL)
```


## Data Visualizations

```{r}
# pretest visualizations #

## line plot with means (NAs removed!!!)
pre_p <- pretest %>%
  filter(ChapterNum != 14 & ChapterNum != 15) %>%
  group_by(ChapterNum, Question)%>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

pre_p14 <- pretest %>%
  filter(ChapterNum == 14 & StudentGender == "B") %>%
  group_by(ChapterNum, Question) %>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

pre_p15 <- pretest %>%
  filter(ChapterNum == 15 & StudentGender == "G") %>%
  group_by(ChapterNum, Question) %>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

ggplot() +
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_p)+
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_p14)+
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_p15)+
  labs(x = "Chapter", y = "Percentage of Response 1",
       caption = "Note: All N/A values are removed from the mean calculation")+
  ggtitle("Percentage Pretest Responses by Chapter and Question")+
  scale_x_discrete(limits = c("1","2","3","4","5","6","7","14","15"),
                   labels = c("C1","C2","C3","C4","C5","C6","C7","C14","C15"))+
  scale_color_brewer(palette = "Paired")+
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5),
         plot.subtitle = element_text(hjust = 0.5),
         panel.border = element_blank(),
         axis.line = element_line(color = "black"))
ggsave("plot1.jpeg")

## line plot with means, behavior questions (NAs removed!!!)
pre_2 <- pretest[pretest$KAB == "Behavior",]

pre_pB <- pre_2%>%
  filter(ChapterNum != 14 & ChapterNum != 15) %>%
  group_by(ChapterNum, Question)%>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

pre_p14B <- pre_2 %>%
  filter(ChapterNum == 14 & StudentGender == "B") %>%
  group_by(ChapterNum, Question) %>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

pre_p15B <- pre_2 %>%
  filter(ChapterNum == 15 & StudentGender == "G") %>%
  group_by(ChapterNum, Question) %>%
  mutate(percent1 = sum(Response == 1, na.rm = TRUE) / n())

ggplot() +
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_pB)+
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_p14B)+
  geom_point(aes(x = ChapterNum, y = percent1, color = Question), data = pre_p15B)+
  labs(x = "Chapter", y = "Percentage of Response 1",
       caption = "Note: All N/A values are removed from the mean calculation")+
  ggtitle("Percentage Pretest Responses by Chapter and Behavior Questions")+
  scale_x_discrete(limits = c("1","2","3","4","5","6","7","14","15"),
                   labels = c("C1","C2","C3","C4","C5","C6","C7","C14","C15"))+
  scale_color_brewer(palette = "Paired")+
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5),
         panel.border = element_blank(),
         axis.line = element_line(color = "black"))
ggsave("plot2.jpeg")

# posttest visualizations #

## line plot with means (NAs and missing (0) scores removed!!!)
post_p <- posttest[posttest$Score != 0,]

post_p2 <- post_p %>%
  group_by(Chapter)%>%
  mutate(percent = ifelse(Score == 1, sum(Score == 1, na.rm = TRUE) / n(),
                             ifelse(Score == 2, sum(Score == 2, na.rm = TRUE) / n(),
                                    ifelse(Score == 3, sum(Score == 3, na.rm = TRUE) / n(),
                                           ifelse(Score == 4, sum(Score == 4, na.rm = TRUE) / n(), NA)))))

ggplot(aes(x = Chapter, y = percent, color = Score), data = post_p2) +
  geom_point()+
  labs(x = "Chapter", y = "Percentages",
       caption = "Note: All N/A values and missing scores (0) are removed from the percentage calculation.")+
  ggtitle("Percentage Posttest Scores by Chapter and Question")+
  scale_color_brewer(palette = "Paired")+
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5),
         panel.border = element_blank(),
         axis.line = element_line(color = "black"))
ggsave("plot3.jpeg")

## line plot with means, behavior questions (NAs and missing (0) scores removed!!!)
post_p2B <- posttest[posttest$Health_Lit == "Behavior",]
post_p2B <- post_p2B[post_p2B$Score != 0,]

post_p2B <- post_p2B %>%
  group_by(Chapter)%>%
  mutate(percent = ifelse(Score == 1, sum(Score == 1, na.rm = TRUE) / n(),
                             ifelse(Score == 2, sum(Score == 2, na.rm = TRUE) / n(),
                                    ifelse(Score == 3, sum(Score == 3, na.rm = TRUE) / n(),
                                           ifelse(Score == 4, sum(Score == 4, na.rm = TRUE) / n(), NA)))))

ggplot(aes(x = Chapter, y = percent, color = Score), data = post_p2B) +
  geom_point()+
  labs(x = "Chapter", y = "Percentages",
       caption = "Note: All N/A values and missing scores (0) are removed from the percentage calculation.")+
  ggtitle("Percentage Posttest Scores by Chapter and Behavior Questions")+
  scale_color_brewer(palette = "Paired")+
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5),
         panel.border = element_blank(),
         axis.line = element_line(color = "black"))
ggsave("plot4.jpeg")
```

## Repeated Measures Models (Generalized linear mixed model)
```{r}
# merge pretest and posttest together by student
colnames(pretest) <- c("StudentNum", "StudentGender", "StudentGrade", "StudentAge","ChapterNum", 
                       "PreQuestion", "PreResponse", "PreKAB")
colnames(posttest) <- c("StudentNum", "ChapterNum", "PostQuestion", "PostScore", "PostHLit")

alltests <- merge(pretest, posttest, by = "StudentNum")
alltests <- alltests %>%
  mutate(PreChapNum = as.character(ChapterNum.x),
         PostChapNum = as.character(ChapterNum.y))%>%
  subset(select = -c(ChapterNum.x,ChapterNum.y))

# perform linear mixed models for chapters 4, 5, and 6
alltests_sub <- alltests[alltests$PreChapNum %in% c('3','4','5','6','7') &
                           alltests$PostChapNum %in% c('C3','C4','C5','C6','C7'),]

## Chapter 3 Posttest Scores with Chapter 4 Pretest Scores
alltests_34 <- alltests_sub[alltests_sub$PreChapNum %in% c('4') &
                           alltests_sub$PostChapNum %in% c('C3'),]

m34 <- glmer(PreResponse ~ PostScore + StudentAge + StudentGender + (1|StudentNum),
             data = alltests_34, family = binomial)
summary(m34)
pval34 <- coef(summary(m34))[,4]
                       

## Chapter 4 Pretest Scores with Chapter 4 Posttest Scores
alltests_44 <- alltests_sub[alltests_sub$PreChapNum == '4' &
                           alltests_sub$PostChapNum == 'C4',]

m44 <- glmer(PostScore ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_44, family = binomial)
summary(m44)
pval44 <- coef(summary(m44))[,4]


## Chapter 4 Posttest Scores with Chapter 5 Pretest Scores
alltests_45 <- alltests_sub[alltests_sub$PreChapNum == '5' &
                           alltests_sub$PostChapNum == 'C4',]

m45 <- glmer(PreResponse ~ PostScore +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_45, family = binomial)
summary(m45)
pval45 <- coef(summary(m45))[,4]


## Chapter 5 Pretest Scores with Chapter 5 Posttest Scores
alltests_55 <- alltests_sub[alltests_sub$PreChapNum == '5' &
                           alltests_sub$PostChapNum == 'C5',]

m55 <- glmer(PostScore ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_55, family = binomial)
summary(m55)
pval55 <- coef(summary(m55))[,4]


## Chapter 5 Posttest Scores with Chapter 6 Pretest Scores
alltests_56 <- alltests_sub[alltests_sub$PreChapNum == '6' &
                           alltests_sub$PostChapNum == 'C5',]

m56 <- glmer(PreResponse ~ PostScore +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_56, family = binomial)
summary(m56)
pval56 <- coef(summary(m56))[,4]


## Chapter 6 Pretest Scores with Chapter 6 Posttest Scores
alltests_66 <- alltests_sub[alltests_sub$PreChapNum == '6' &
                           alltests_sub$PostChapNum == 'C6',]

m66 <- glmer(PostScore ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_66, family = binomial)
summary(m66)
pval66 <- coef(summary(m66))[,4]

pvals <- data.frame(list(pval34,pval45,pval56))
colnames(pvals) <- c("Post3Pre4", "Post4Pre5", "Post5Pre6")
pvals <- pvals[-1,]
kable(pvals, caption = "P-Values for Pre-test and Post-test transition")

pvals2 <- data.frame(list(pval44, pval55, pval66))
colnames(pvals2) <- c("Post4Pre4", "Post5Pre5", "Post6Pre6")
pvals2 <- pvals2[-1,]
kable(pvals2, caption = "P-Values for Pre-test and Post-test within Chapters")
```


## Logistic Regression (with 0 as incorrect answer, in/correct spelling and 1 as correct answer, correct spelling)
```{r}
alltests_log <- alltests %>%
  mutate(PostScore1 = ifelse(PostScore == 1, 1,
                             ifelse(PostScore == 2, 0,
                                    ifelse(PostScore == 3, 0,
                                           ifelse(PostScore == 4, 0,
                                                  ifelse(PostScore == 0, 0, NA))))))%>%
  subset(select = -c(PostScore))

head(alltests_log)

# select chapters 4, 5, and 6
alltests_sublog <- alltests_log[alltests_log$PreChapNum %in% c('3','4','5','6','7') &
                           alltests_log$PostChapNum %in% c('C3','C4','C5','C6','C7'),]

## Chapter 3 Posttest Scores with Chapter 4 Pretest Scores
alltests_34log <- alltests_sublog[alltests_sublog$PreChapNum %in% c('4') &
                           alltests_sublog$PostChapNum %in% c('C3'),]

m34log <- glmer(PreResponse ~ PostScore1 +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_34log, family = binomial)
summary(m34log)

## Chapter 4 Pretest Scores with Chapter 4 Posttest Scores
alltests_44log <- alltests_sublog[alltests_sublog$PreChapNum == '4' &
                           alltests_sublog$PostChapNum == 'C4',]

m44log <- glmer(PostScore1 ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_44log, family = binomial)
summary(m44log)


## Chapter 4 Posttest Scores with Chapter 5 Pretest Scores
alltests_45log <- alltests_sublog[alltests_sublog$PreChapNum == '5' &
                           alltests_sublog$PostChapNum == 'C4',]

m45log <- glmer(PreResponse ~ PostScore1 +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_45log, family = binomial)
summary(m45log)


## Chapter 5 Pretest Scores with Chapter 5 Posttest Scores
alltests_55log <- alltests_sublog[alltests_sublog$PreChapNum == '5' &
                           alltests_sublog$PostChapNum == 'C5',]

m55log <- glmer(PostScore1 ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_55log, family = binomial)
summary(m55log)


## Chapter 5 Posttest Scores with Chapter 6 Pretest Scores
alltests_56log <- alltests_sublog[alltests_sublog$PreChapNum == '6' &
                           alltests_sublog$PostChapNum == 'C5',]

m56log <- glmer(PreResponse ~ PostScore1 +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_56log, family = binomial)
summary(m56log)


## Chapter 6 Pretest Scores with Chapter 6 Posttest Scores
alltests_66log <- alltests_sublog[alltests_sublog$PreChapNum == '6' &
                           alltests_sublog$PostChapNum == 'C6',]

m66log <- glmer(PostScore1 ~ PreResponse +  StudentAge + StudentGender + (1|StudentNum),
             data = alltests_66log, family = binomial)
summary(m66log)
```


## Chi Square Test
```{r}
alltestss <- alltests %>%
  group_by(StudentNum)
responses <- table(alltestss$PreResponse, alltestss$PostScore)
responses

chi1 <- chisq.test(responses)
chi1


responses34 <- table(alltests_34$PreResponse,alltests_34$PostScore)
chi34 <- chisq.test(responses34)
chi34

responses44 <- table(alltests_44$PreResponse,alltests_44$PostScore)
chi44 <- chisq.test(responses44)
chi44

responses45 <- table(alltests_45$PreResponse,alltests_45$PostScore)
chi45 <- chisq.test(responses45)
chi45

responses55 <- table(alltests_55$PreResponse,alltests_55$PostScore)
chi55 <- chisq.test(responses55)
chi55

responses56 <- table(alltests_56$PreResponse,alltests_56$PostScore)
chi56 <- chisq.test(responses56)
chi56

responses66 <- table(alltests_66$PreResponse,alltests_66$PostScore)
chi66 <- chisq.test(responses66)
chi66

chi_tests <- data.frame(Model = c("Post3Pre4", "Post4Pre4", "Post4Pre5",
                                  "Post5Pre5", "Post5Pre6",  "Post6Pre6"),
                        ChiSquared = c(chi34$statistic, chi44$statistic, chi45$statistic,
                                       chi55$statistic, chi56$statistic, chi66$statistic),
                        DF = c(chi34$parameter, chi44$parameter, chi45$parameter,
                                       chi55$parameter, chi56$parameter, chi66$parameter),
                        PValue = c(chi34$p.value, chi44$p.value, chi45$p.value,
                                       chi55$p.value, chi56$p.value, chi66$p.value),
                        Method = )

kable(chi_tests, caption = "Chi-Square Test Results", align = NULL)
```


